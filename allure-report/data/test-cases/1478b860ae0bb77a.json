{"uid":"1478b860ae0bb77a","name":"test_search_user_params_005[getDataForSearchUser4]","fullName":"testCases.test_Search_User_params.Test_Search_User_params#test_search_user_params_005","historyId":"ad6306ad69748b1d91c93ba51afbd49d","time":{"start":1723374352396,"stop":1723374361419,"duration":9023},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_Search_User_params.Test_Search_User_params object at 0x000001D9FAE01310>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d1efd8755904989574e56357eaee308\")>\ngetDataForSearchUser = ('demo', 'fail')\n\n    @pytest.mark.regression\n    @pytest.mark.group2\n    def test_search_user_params_005(self,setup,getDataForSearchUser):\n        self.driver = setup\n        self.lp = Login_Class(self.driver)\n        self.lp.Click_Login_Link()\n        self.lp.Enter_Username(self.Username)\n        self.lp.Enter_Password(self.Password)\n        self.lp.Click_Login_Button()\n        self.su = Search_User_Class(self.driver)\n        self.su.Click_Link_User_Management()\n    \n        Search_Username = getDataForSearchUser[0]\n        print(Search_Username)\n        Expected_result = getDataForSearchUser[1]\n        print(Expected_result)\n    \n        self.su.Enter_UserName(Search_Username)\n        self.driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n        time.sleep(4)\n        self.su.Click_Search_User_Button()\n        if self.su.Validate_Search_User() == \"pass\" and Expected_result == \"pass\":\n            assert True\n        elif self.su.Validate_Search_User() == \"pass\" and Expected_result == \"fail\":\n>           assert False\nE           assert False\n\ntestCases\\test_Search_User_params.py:38: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1723374340385,"stop":1723374352396,"duration":12011},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"getDataForSearchUser","time":{"start":1723374352396,"stop":1723374352396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_Search_User_params.Test_Search_User_params object at 0x000001D9FAE01310>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0d1efd8755904989574e56357eaee308\")>\ngetDataForSearchUser = ('demo', 'fail')\n\n    @pytest.mark.regression\n    @pytest.mark.group2\n    def test_search_user_params_005(self,setup,getDataForSearchUser):\n        self.driver = setup\n        self.lp = Login_Class(self.driver)\n        self.lp.Click_Login_Link()\n        self.lp.Enter_Username(self.Username)\n        self.lp.Enter_Password(self.Password)\n        self.lp.Click_Login_Button()\n        self.su = Search_User_Class(self.driver)\n        self.su.Click_Link_User_Management()\n    \n        Search_Username = getDataForSearchUser[0]\n        print(Search_Username)\n        Expected_result = getDataForSearchUser[1]\n        print(Expected_result)\n    \n        self.su.Enter_UserName(Search_Username)\n        self.driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n        time.sleep(4)\n        self.su.Click_Search_User_Button()\n        if self.su.Validate_Search_User() == \"pass\" and Expected_result == \"pass\":\n            assert True\n        elif self.su.Validate_Search_User() == \"pass\" and Expected_result == \"fail\":\n>           assert False\nE           assert False\n\ntestCases\\test_Search_User_params.py:38: AssertionError","steps":[],"attachments":[{"uid":"68676b4663608288","name":"stdout","source":"68676b4663608288.txt","type":"text/plain","size":10}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"setup::0","time":{"start":1723374361427,"stop":1723374365900,"duration":4473},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"group2"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_Search_User_params"},{"name":"subSuite","value":"Test_Search_User_params"},{"name":"host","value":"LAPTOP-FSSPCLG9"},{"name":"thread","value":"8692-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_Search_User_params"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"getDataForSearchUser","value":"('demo', 'fail')"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["regression","group2"]},"source":"1478b860ae0bb77a.json","parameterValues":["('demo', 'fail')"]}